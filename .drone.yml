kind: pipeline
name: default
platform:
  os: linux
  arch: amd64
steps:
  - name: test-python
    pull: always
    image: docker.twistbioscience-staging.com/slave_python_poetry:3.6
    commands:
      - cd python
      - poetry install
      - poetry run invoke lint
      - poetry run invoke test
    environment:
      PY_PUBLISH_PASSWORD:
        from_secret: py_publish_password
      PY_PUBLISH_USER:
        from_secret: py_publish_user
  - name: build-and-publish-python
    pull: always
    image: docker.twistbioscience-staging.com/slave_python_poetry:3.6
    commands:
      - cd python
      - poetry install
      - poetry version -s "0.1.$DRONE_BUILD_NUMBER"
      - poetry build -f sdist
      - poetry publish -r twist -u "$PY_PUBLISH_USER" -p "$PY_PUBLISH_PASSWORD"
    environment:
      PY_PUBLISH_PASSWORD:
        from_secret: py_publish_password
      PY_PUBLISH_USER:
        from_secret: py_publish_user
    when:
      branch:
        - master
        - pdx-uat-*
      event:
        - push
  - name: build-test-node
    pull: always
    image: node:lts-alpine3.9
    commands:
      - cd node
      - npm install
      - npm run lint
      - npm run test
  - name: build-test-ruby
    pull: always
    image: docker.twistbioscience-staging.com/ecommerce_web:ruby-2.6.3
    commands:
      - cd ruby
      - gem install -g Gemfile
      - rubocop src tests *.rb
      - yardoc src/*
      - ruby -Ilib:test tests/tests.rb
    environment:
      NEXUS_PASS:
        from_secret: nexus_pass
image_pull_secrets:
  - .dockerconfigjson
